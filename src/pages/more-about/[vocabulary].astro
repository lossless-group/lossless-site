---
import { getCollection, type CollectionEntry, render } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import OneArticleOnPage from '@components/articles/OneArticleOnPage.astro';

// Ensure page is prerendered as static HTML
export const prerender = true;

export async function getStaticPaths() {
  const vocabularyEntries = await getCollection('vocabulary');
  return vocabularyEntries.map(entry => {
    // Generate slug and title from the entry ID if not present
    const filename = entry.id.replace(/\.md$/, '');
    const slug = entry.data.slug || filename.toLowerCase().replace(/\s+/g, '-');
    return {
      params: { vocabulary: slug },
      props: { entry }
    };
  });
}

interface Props {
  entry: CollectionEntry<'vocabulary'>;
}

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<Layout title={entry.data.title || entry.id}>
  <OneArticleOnPage
    title={entry.data.title || entry.id}
    content={Content}
  />
</Layout>