---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import OneArticle from '@layouts/OneArticle.astro';
import OneArticleOnPage from '@components/articles/OneArticleOnPage.astro';
import { capitalizeTitle } from "@utils/slugify"
// Ensure page is prerendered as static HTML
export const prerender = true;

export async function getStaticPaths() {
  const vocabularyEntries = await getCollection('vocabulary');
  return vocabularyEntries.map(entry => {
    // Generate slug and title from the entry ID if not present
    const filename = entry.id.replace(/\.md$/, '');
    const slug = entry.data.slug || filename.toLowerCase().replace(/\s+/g, '-');

    if (!entry.data.title) {
      entry.data.title = capitalizeTitle(filename.replace("-", " "));
    }

    return {
      params: { vocabulary: slug },
      props: { entry }
    };
  });
}

interface Props {
  entry: CollectionEntry<'vocabulary'>;
}

const { entry } = Astro.props;

---

<Layout title={entry.data.title}>
  <OneArticle
    Component={OneArticleOnPage}
    content={entry.body}
    markdownFile={entry.id}
    data={{
      ...entry.data,
      path: Astro.url.pathname,
      id: entry.id
    }}
  />
</Layout>