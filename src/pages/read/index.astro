---
// site/src/reader/index.astro
// This page renders a grid of essays from the essaysCollection, styled and structured to match
// the approach of site/src/pages/more-about/index.astro, per project rules.
// Aggressive, detailed commenting is used throughout.

import path from 'node:path';
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import ThinGradientBleedSeparator from '@components/basics/separators/ThinGradientBleedSeparator.astro';
// Importing the CollectionEntryRow component for rendering each essay entry in the grid below
import CollectionEntryRow from '@components/basics/CollectionEntryRow.astro';
import ArticleListColumn from '@components/articles/ArticleListColumn.astro';
import ArticleListNewsPreview from '@components/articles/ArticleListNewsPreview.astro';
import HeroGlassmorphic from '@components/basics/HeroGlassmorphic.astro';
import AnimationWrapper from '@components/basics/AnimationWrapper.astro';
import TagColumn from '@components/tool-components/TagColumn.astro';
/**
 * Interface for an essay item, matching the data structure output by essaysCollection
 * (see src/content.config.ts for schema and transforms)
 *
 * NOTE: The 'published' property is not part of the global schema, but we extend the type locally here
 * to allow TypeScript-safe access. This keeps content.config.ts simple for the content team.
 */
interface EssayFrontmatter {
  title: string;
  slug?: string;
  lede?: string;
  summary?: string;
  authors?: string[];
  tags?: string[];
  date_authored_initial_draft?: string;
  banner_image?: string;
  published?: boolean;
  // ...any other frontmatter fields
}

interface EssayItem {
  id: string;
  slug: string;
  title?: string;
  lede?: string;
  banner_image?: string;
  tags?: string[];
  summary?: string;
  data: EssayFrontmatter;
  url: string;
}

// Fetch all essays from the essays collection
const essayEntries = await getCollection('essays');

// Filter out essays where published === false (default is published unless explicitly false)
// We assert the type to include 'published' for TypeScript safety, as this property is not globally defined.
const publishedEssays = essayEntries.filter(entry => {
  const data = entry.data as EssayFrontmatter; // Type assertion for local safety
  return data.published !== false;
});

// Sort essays by title (or another property if desired)
publishedEssays.sort((a, b) => (a.data.title || '').localeCompare(b.data.title || ''));

// Map entries to EssayItem objects for use with CollectionEntryRow
const essayItems: EssayItem[] = publishedEssays.map(entry => {
  // Use Node.js path module to robustly extract the filename (preserving case)
  // - entry.id is always the relative path from the collection root, with original casing
  // - path.basename is safer and clearer than split/pop
  const filename = path.basename(entry.id, '.md'); // Preserves original case
  const slug = filename.toLowerCase().replace(/\s+/g, '-');
  // Use title and lede directly from frontmatter, fallback to filename (preserving case, dashes/underscores to space)
  let { title, lede = '', banner_image = '', tags = [], summary = '' } = entry.data as EssayFrontmatter;
  if (!title || title.trim() === '') {
    // Use the filename as the fallback title, preserving original casing
    // - Replace dashes/underscores with spaces
    // - Collapse multiple spaces
    // - DO NOT change the case of any letters (e.g., 'API' stays 'API')
    title = filename
      .replace(/[-_]/g, ' ')
      .replace(/\s+/g, ' ')
      .trim();
  }
  return {
    id: entry.id,
    slug,
    title,
    lede,
    banner_image,
    tags,
    summary,
    data: entry.data as EssayFrontmatter,
    // url property for downstream components (e.g., ArticleListNewsPreview)
    url: `/read/essays/${slug}`,
    tagRoute: `read/more-on`
  };
});

// console.log(essayItems);

// Define frontmatter data for the reader index page
const frontmatter = {
  title: "The Losslesss Reader",
  description: "Browse essays and longform writing from our library",
  lede: "Browse essays and longform writing from our library"
};

// Render the page with the filtered and sorted essays

---

<Layout frontmatter={frontmatter}>
  <AnimationWrapper>
    <main>
      <!-- Hero Section -->
      <HeroGlassmorphic
        title="The Lossless Reader"
        subtitle="Deep Insights & Longform Writing"
        description="Explore our curated collection of essays, research, and commentary that delves into the intersection of technology, innovation, and human potential."
        ctaText="Browse All Essays"
        ctaUrl="/read/through"
        image={{
          src: "/visuals/Convey__Picto__Assembly-Line.svg",
          alt: "Assembly line illustration representing systematic thinking"
        }}
        backgroundStyle="glassmorphic-vivid"
        alignment="left"
        fullBleed={true}
        animate={true}
      />

      <!-- Content Section -->
      <div class="content-wrapper">
        <div class="essays-layout">
          <!-- Tag Filter Sidebar -->
          <aside class="tag-sidebar">
            <TagColumn tools={essayItems} />
          </aside>

          <!-- Essays List -->
          <main class="essays-main">
            <section class="essays-section">
              <div class="section-header">
                <h2 class="section-title">Featured Essays</h2>
                <p class="section-description">Longform writing, research, and commentary that challenges conventional thinking.</p>
              </div>
              
              {/*
                Render ArticleListColumn for all essays, passing ArticleListNewsPreview as EntryComponent.
                This mirrors the columnar, DRY rendering pattern from the [tag].astro page for consistency.
                - entries: essayItems (array of essay data)
                - EntryComponent: ArticleListNewsPreview (renders each essay row)
              */}
              <ArticleListColumn entries={essayItems} EntryComponent={ArticleListNewsPreview} />
            </section>
          </main>
        </div>

        <ThinGradientBleedSeparator height="2px" marginTop="3rem" marginBottom="3rem" />

        <!-- Additional navigation section -->
        <section class="navigation-section" data-animate="fade-up" data-animate-delay="0.3">
          <div class="navigation-content">
            <h3 class="navigation-title">Explore More</h3>
            <div class="navigation-links">
              <a href="/read/through" class="nav-link primary">Browse All Essays</a>
              <a href="/more-about" class="nav-link secondary">Reference Library</a>
              <a href="/ai-toolkit" class="nav-link secondary">AI Toolkit</a>
            </div>
          </div>
        </section>
      </div>
    </main>
  </AnimationWrapper>
</Layout>

<style>
  /* Content wrapper with consistent styling */
  .content-wrapper {
    width: 92%;
    max-width: 1400px; /* Increased to accommodate sidebar */
    margin: 0 auto;
    padding: 2rem 0;
  }

  /* Essays layout with sidebar */
  .essays-layout {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
  }

  /* Tag sidebar styling */
  .tag-sidebar {
    position: sticky;
    top: 2rem;
    height: fit-content;
    flex: 0 0 300px; /* Fixed width, no shrinking */
  }

  /* Main essays content */
  .essays-main {
    flex: 1;
    display: flex;
    justify-content: center; /* Center the essays column */
  }

  /* Center the essays section within the main area */
  .essays-section {
    width: 100%;
    max-width: 800px; /* Match the max-width of individual essay entries */
  }

  /* Essays section styling */
  .essays-section {
    margin: 3rem 0;
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-title {
    font-size: var(--fs-700);
    font-weight: var(--fw-bold);
    margin-bottom: 1rem;
    background: linear-gradient(90deg, var(--clr-lossless-primary-light) 0%, var(--clr-lossless-accent--brightest) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .section-description {
    font-size: var(--fs-450);
    color: var(--clr-lossless-primary-light);
    max-width: 60ch;
    margin: 0 auto;
    line-height: 1.6;
  }

  /* Navigation section styling */
  .navigation-section {
    margin: 2rem 0;
  }

  .navigation-content {
    text-align: center;
    padding: 2rem;
    background: rgba(255, 255, 255, 0.02);
    border-radius: 16px;
    border: 1px solid rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
  }

  .navigation-title {
    font-size: var(--fs-500);
    font-weight: var(--fw-semi-bold);
    margin-bottom: 1.5rem;
    color: var(--clr-lossless-accent--brightest);
  }

  .navigation-links {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .nav-link {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: var(--fw-semi-bold);
    transition: all 0.2s ease;
    border: 1px solid transparent;
  }

  .nav-link.primary {
    background: var(--clr-lossless-accent--brightest);
    color: var(--clr-lossless-primary-dark);
  }

  .nav-link.primary:hover {
    background: transparent;
    color: var(--clr-lossless-accent--brightest);
    border-color: var(--clr-lossless-accent--brightest);
    transform: translateY(-1px);
  }

  .nav-link.secondary {
    background: transparent;
    color: var(--clr-lossless-primary-light);
    border-color: rgba(255, 255, 255, 0.1);
  }

  .nav-link.secondary:hover {
    background: rgba(255, 255, 255, 0.05);
    color: var(--clr-lossless-accent--brightest);
    border-color: var(--clr-lossless-accent--brightest);
    transform: translateY(-1px);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .content-wrapper {
      width: 95%;
      padding: 1rem 0;
    }

    .essays-layout {
      flex-direction: column;
      gap: 1rem;
    }

    .tag-sidebar {
      position: static;
      flex: none;
      width: 100%;
      order: 2; /* Move sidebar below content on mobile */
    }

    .essays-main {
      order: 1; /* Move content above sidebar on mobile */
      justify-content: center;
    }

    .essays-section {
      max-width: 100%; /* Full width on mobile */
    }

    .navigation-links {
      flex-direction: column;
      align-items: center;
    }

    .nav-link {
      width: 100%;
      max-width: 300px;
      text-align: center;
    }

    .section-title {
      font-size: var(--fs-600);
    }

    .section-description {
      font-size: var(--fs-400);
    }
  }
</style>
