---
// site/src/layouts/CollectionReaderLayout.astro

import { unified } from 'unified';
import remarkParse from 'remark-parse';
import remarkGfm from 'remark-gfm';
import remarkDirective from 'remark-directive';
import remarkImages from '@utils/markdown/remark-images'; 
import remarkBacklinks from '@utils/markdown/remark-backlinks';
import remarkCitations from '@utils/markdown/remark-citations';
import remarkTableOfContents from '@utils/markdown/remark-toc';
import { remarkDirectiveToComponent } from '@utils/markdown/remark-directives';
import type { Root } from 'mdast';

import CollectionSidebar from '@components/articles/ContentNavSidebar.astro';
import OneArticleOnPage from '@components/articles/OneArticleOnPage.astro';
import { markdownDebugger } from '@utils/markdown/markdownDebugger';

// Props
interface Props {
  collection: string;
  entry: any;
  essays: any[];
  mode?: 'client' | 'generic'; // prop to control link behavior
  client?: string
}

const { collection, entry, essays, mode, client } = Astro.props as Props;

let mdastNode = null;
let tocNode = null;
let contentData = null;

const effectiveEntry = entry ?? (essays.length > 0 ? essays[0] : null);

// Process markdown content
if (effectiveEntry) {
  const processor = unified()
    .use(remarkParse)
    .use(remarkGfm)
    .use(remarkDirective)       // Parse directive syntax
    .use(remarkDirectiveToComponent) // Preserve directives for AstroMarkdown
    .use(remarkImages) 
    .use(remarkBacklinks)
    .use(remarkCitations)
    .use(remarkTableOfContents);

  const mdast = processor.parse(effectiveEntry.body || '');
  mdastNode = await processor.run(mdast);

  markdownDebugger.log('CollectionReaderLayout.astro Debug');
  markdownDebugger.writeDebugFile('collection-reader-mdast', mdastNode);
  markdownDebugger.verbose('MDAST structure:', mdastNode);

  tocNode = mdastNode.children?.find(child => child.type === 'tableOfContents');

  contentData = {
    path: effectiveEntry.id,
    id: effectiveEntry.id,
    collection,
    ...effectiveEntry.data
  };
}
---

<div class="collection-reader-layout">
  <aside class="collection-sidebar">
    <div class="sidebar-inner">
      <CollectionSidebar essays={essays} currentSlug={effectiveEntry ? effectiveEntry.id : null} mode={mode} client={client} />
    </div>
  </aside>

  <main class="collection-reader-pane">
    {effectiveEntry && mdastNode && contentData ? (
      <OneArticleOnPage 
        content={mdastNode} 
        data={contentData} 
      />
    ) : (
      <h2>No entries available in collection: {collection}</h2>
    )}
  </main>
</div>


<style>
.collection-reader-layout {
  display: flex;
  flex-direction: row;
  width: 100%;
  height: calc(100vh - 4rem); /* Fixed height minus header */
  overflow: hidden; /* Prevent overall scroll */
  max-width: 100%;
  box-sizing: border-box;
}

.collection-sidebar {
  width: 300px;
  min-width: 300px;
  max-width: 300px;
  flex-shrink: 0;
  border-right: 1px solid var(--clr-lossless-ui-btn-border, #ccc);
  overflow-y: auto; /* Independent scroll */
  overflow-x: hidden;
  position: relative; /* Remove sticky positioning */
  height: 100%;
  padding: 1rem;
  background: var(--clr-sidebar-bg, #111);
  transition: width 0.3s ease-in-out;
  scroll-behavior: smooth; /* Smooth scrolling */
}

.sidebar-inner {
  width: 100%;
  min-width: 0;
}

.collection-reader-pane {
  flex: 1 1 auto;
  display: block;
  padding: 3rem 2rem;
  min-width: 0;
  overflow-y: auto; /* Independent scroll */
  overflow-x: hidden;
  max-width: 100%;
  height: 100%;
  scroll-behavior: smooth; /* Smooth scrolling */
}

/* Constrain OneArticleOnPage sidebars when used in CollectionReaderLayout */
.collection-reader-pane :global(.info-sidebar) {
  min-width: 240px;
  max-width: 280px;
  width: 280px;
}

.collection-reader-pane :global(.info-sidebar:hover:not(.collapsed)) {
  width: 400px;
  max-width: 400px;
}

.collection-reader-pane :global(.toc-sidebar) {
  min-width: 240px;
  max-width: 280px;
  width: 280px;
}

.collection-reader-pane :global(.toc-sidebar:hover:not(.collapsed)) {
  width: 400px;
  max-width: 400px;
}

.collection-reader-pane :global(.content-inner) {
  max-width: 100%;
}

.collection-reader-pane :global(.main-content) {
  max-width: 85ch;
}

.collection-reader-pane :global(.content-wrapper) {
  padding: 1rem 0.5rem;
  max-width: 100%;
  width: 100%;
}

/* Custom scrollbar styling for better UX */
.collection-sidebar::-webkit-scrollbar,
.collection-reader-pane::-webkit-scrollbar {
  width: 8px;
}

.collection-sidebar::-webkit-scrollbar-track,
.collection-reader-pane::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

.collection-sidebar::-webkit-scrollbar-thumb,
.collection-reader-pane::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.3);
  border-radius: 4px;
}

.collection-sidebar::-webkit-scrollbar-thumb:hover,
.collection-reader-pane::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.5);
}

@media (max-width: 1024px) {
  .collection-reader-layout {
    flex-direction: column;
    height: auto; /* Allow natural height on mobile */
    overflow: visible;
  }

  .collection-sidebar {
    position: relative;
    width: 100%;
    max-width: 100%;
    min-width: 100%;
    height: auto;
    border-right: none;
    border-bottom: 1px solid var(--clr-lossless-ui-btn-border, #ccc);
    padding: 1rem 0;
    top: auto;

    box-sizing: border-box;
    flex-shrink: 0;
    
    max-height: 400px;
    overflow-y: auto;
    overflow-x: hidden;
    z-index: 1;
  }

  .collection-reader-pane {
    padding: 1rem;
    height: auto; /* Allow natural height on mobile */
    overflow: visible;
  }
  
  .collection-reader-pane :global(.content-inner) {
    max-width: 100% !important; /* Override all previous constraints */
  }
  
  .collection-reader-pane :global(.main-content) {
    max-width: 100%;
  }
  
  .collection-reader-pane :global(.prose) {
    max-width: 100%;
  }
}

/* Responsive adjustments for CollectionReaderLayout */
@media (max-width: 1600px) {
  .collection-reader-pane :global(.info-sidebar),
  .collection-reader-pane :global(.toc-sidebar) {
    min-width: 220px;
    max-width: 260px;
    width: 260px;
  }
  
  .collection-reader-pane :global(.info-sidebar:hover:not(.collapsed)),
  .collection-reader-pane :global(.toc-sidebar:hover:not(.collapsed)) {
    width: 350px;
    max-width: 350px;
  }
  
  .collection-reader-pane :global(.content-inner) {
    max-width: calc(100% - 540px); /* Account for both sidebars + gap */
  }
  

}

@media (max-width: 1400px) {
  .collection-reader-pane :global(.info-sidebar),
  .collection-reader-pane :global(.toc-sidebar) {
    min-width: 200px;
    max-width: 240px;
    width: 240px;
  }
  
  .collection-reader-pane :global(.info-sidebar:hover:not(.collapsed)),
  .collection-reader-pane :global(.toc-sidebar:hover:not(.collapsed)) {
    width: 320px;
    max-width: 320px;
  }
  
  .collection-reader-pane :global(.content-inner) {
    max-width: calc(100% - 500px); /* Account for both sidebars + gap */
  }
  

}

@media (max-width: 1200px) {
  .collection-reader-pane :global(.info-sidebar),
  .collection-reader-pane :global(.toc-sidebar) {
    min-width: 180px;
    max-width: 220px;
    width: 220px;
  }
  
  .collection-reader-pane :global(.info-sidebar:hover:not(.collapsed)),
  .collection-reader-pane :global(.toc-sidebar:hover:not(.collapsed)) {
    width: 280px;
    max-width: 280px;
  }
  
  .collection-reader-pane :global(.content-inner) {
    max-width: calc(100% - 460px); /* Account for both sidebars + gap */
  }
  

}

@media (max-width: 1100px) {
  .collection-reader-pane :global(.info-sidebar),
  .collection-reader-pane :global(.toc-sidebar) {
    min-width: 160px;
    max-width: 200px;
    width: 200px;
  }
  
  .collection-reader-pane :global(.info-sidebar:hover:not(.collapsed)),
  .collection-reader-pane :global(.toc-sidebar:hover:not(.collapsed)) {
    width: 260px;
    max-width: 260px;
  }
  
  .collection-reader-pane :global(.content-inner) {
    max-width: calc(100% - 420px); /* Account for both sidebars + gap */
  }
  

}

@media (min-width: 1025px) {
  .collection-sidebar {
    width: 300px;
    min-width: 300px;
    max-width: 28vw;
    transition: width 0.3s ease-in-out, max-width 0.3s ease-in-out;
  }

  .collection-sidebar:hover {
    width: 28vw;
  }
}

</style>
