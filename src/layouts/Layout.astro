---
import Header from "@basics/Header.astro";
import Footer from "@basics/Footer.astro";
import "@styles/global.css";
import "@styles/starwind.css";
import "@styles/callouts.css";
import "@styles/codeblocks.css";
import "@styles/shiki-github-dark.css";
import PageMeta from "@components/basics/PageMeta.astro";

interface Props {
  // Direct props that .astro pages might pass (e.g., for title, description)
  title?: string;
  description?: string;

  // Props from Markdown/MDX page frontmatter, which Astro nests under `frontmatter`
  frontmatter?: {
    title?: string;
    description?: string;
    lede?: string;
    banner_image?: string;
    portrait_image?: string;
  };
}

// Safely access frontmatter, defaulting to an empty object if not present
const fm = Astro.props.frontmatter || {};

// Determine page title: Prioritize frontmatter.title, then direct Astro.props.title, then a global default.
const pageTitle = fm.title || Astro.props.title || "Go Lossless: Innovate and Collaborate";

// Determine page description: Prioritize frontmatter.lede, then frontmatter.description, 
// then direct Astro.props.description (if an .astro page passes it), then a global default.
const pageDescription = fm.lede || fm.description || Astro.props.description || 'Explore insights on Digital Transformation, AI, and Software Development with The Lossless Group';

// Determine image URL: Prioritize frontmatter.banner_image, then frontmatter.portrait_image, then a global default.
const siteUrl = Astro.site ? Astro.site.toString().replace(/\/$/, '') : 'https://lossless.group';
const defaultSiteImage = "/visuals/imageRep__North-Sea-of-Data.webp" // Ensure this image exists in /public/images/

let imageUrl = defaultSiteImage;
const fmBannerImage = fm.banner_image;
const fmPortraitImage = fm.portrait_image;

if (fmBannerImage) {
  imageUrl = fmBannerImage.startsWith('http') ? fmBannerImage : `${siteUrl}${fmBannerImage.startsWith('/') ? '' : '/'}${fmBannerImage}`;
} else if (fmPortraitImage) {
  imageUrl = fmPortraitImage.startsWith('http') ? fmPortraitImage : `${siteUrl}${fmPortraitImage.startsWith('/') ? '' : '/'}${fmPortraitImage}`;
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />

    {/*
      SEO Meta Tags Management:
      The PageMeta component (src/components/basics/PageMeta.astro) 
      is responsible for generating Open Graph and Twitter Card meta tags.
      It takes props like title, description, imageUrl, etc., which are 
      derived from page frontmatter or defaults in this layout's script.
      For optional tags like twitter:site or twitter:creator, define 
      corresponding variables in this layout's script and pass them to PageMeta.
    */}

    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
      
    <PageMeta
      title={pageTitle}
      description={pageDescription}
      imageUrl={imageUrl}
      pageUrl={Astro.url.href}
      siteName="Lossless.കം"
      ogType="article" 
      twitterCardType="summary_large_image"
    />

    {/* Import global avatar and author handle styles */}
    <link rel="stylesheet" href="/src/styles/avatars.css" />

  </head>
  <body>
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style>
  body, html {
    background-color: var(--clr-primary-bg);
  }

  main {
    margin-top: 4.5rem;
  }
  h1 {
    font-family: "Poppins", sans-serif;
    color: var(--clr-lossless-primary-light);
  }
</style>
