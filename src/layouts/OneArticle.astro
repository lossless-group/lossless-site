---
/**
 * OneArticle.astro
 * Layout for displaying a single article in a centered, readable format
 * Handles markdown processing with remark plugins
 */

import { unified } from 'unified';
import remarkParse from 'remark-parse';
import remarkGfm from 'remark-gfm';
import remarkBacklinks from '@utils/markdown/remark-backlinks';
import remarkImages from '@utils/markdown/remark-images';
import remarkCallouts from '@utils/markdown/remark-callout-handler';
import remarkCitations from '@utils/markdown/remarkCitations';
import DebugMarkdown from '@components/markdown/DebugMarkdown.astro';
import { markdownDebugger } from '@utils/markdown/markdownDebugger';

interface Props {
  Component: any;
  data: Record<string, any>;
  content: string;
  markdownFile?: string;
}

const { Component, data, content, markdownFile } = Astro.props;

// Process with our custom remark plugins to get MDAST
const processor = unified()
  .use(remarkParse)           // 1. Parse markdown to MDAST
  .use(remarkGfm)
  .use(remarkImages)          // 4. Process inline images
  .use(remarkBacklinks)       // 3. Process inline wiki-style links
  .use(remarkCitations)       // 2. Process citations
  .use(remarkCallouts)       // 5. Process container elements (blockquotes to callouts)

// First parse to MDAST
const mdast = processor.parse(content || '');

// Then run transformations
const transformedMdast = await processor.run(mdast);

// Debug output to see AST structure
markdownDebugger.log('OneArticle.astro Debug');
markdownDebugger.writeDebugFile('transformed-mdast', transformedMdast);
markdownDebugger.verbose('MDAST structure:', transformedMdast);

---

<div class="one-article">
  {markdownFile && <DebugMarkdown content={content} markdownFile={markdownFile} />}
  <Component 
    content={transformedMdast}
    data={data}
  >
    <slot />
  </Component>
</div>

<style>
  .one-article {
    width: 100%;
    max-width: var(--content-width, 1200px);
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  @media (min-width: 768px) {
    .one-article {
      padding: 4rem 2rem;
    }
  }
</style>