---
import ToolCard from "../../components/tool-components/ToolCard.astro";

interface Props {
  tools: any[];
  expanded?: boolean;
  galleryId?: string;
  small?: boolean;
  takeUpWholeWidth?: boolean;
  errors?: string[];
}

const {
  tools,
  expanded = true,
  small,
  takeUpWholeWidth = false,
  errors = [],
  galleryId = `tooling-gallery-${Date.now()}-${Math.floor(Math.random() * 1000)}`
} = Astro.props;
---

<div class="tooling-gallery-container" id={galleryId} class:list={[{ 'full-width': takeUpWholeWidth }]}>
  <div class="gallery-header">
    <button type="button" class="toggle-button" onclick={`toggleToolGallery('${galleryId}')`}>
      {expanded ? "Click to close" : "Click to expand"}
    </button>
  </div>

  <div class="tooling-gallery-scroll" style={`display: ${expanded ? 'flex' : 'none'}`}>
    {tools.map(tool => (
      <div class="tool-card-wrapper">
        <ToolCard {...tool} filePath={tool.filePath} small={small} />
      </div>
    ))}
  </div>
  
  {errors.length > 0 && (
    <div class="tool-gallery-error">
      ⚠️ Tool(s) not found:
      <ul>
        {errors.map(id => <li><code>{id}</code></li>)}
      </ul>
    </div>
  )}
</div>

<style>
.tooling-gallery-container {
  margin-bottom: 2rem;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 0.5rem;
  background-color: rgba(255, 255, 255, 0.03);
  width: 100%;
  /* Smooth responsive width using clamp() - scales from 100% on mobile to 25vw on large screens */
  max-width: clamp(100%, calc(100vw - 2rem), 25vw);
  overflow: hidden;
  box-sizing: border-box;
  min-width: 0;
  word-wrap: break-word;
  overflow-wrap: break-word;
  /* Add smooth transition for width changes */
  transition: max-width 0.3s ease-in-out;
}

.gallery-header {
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  padding: 0.75rem 1rem;
  background-color: rgba(255, 255, 255, 0.02);
}

.tooling-gallery-container.full-width {
  max-width: 100%;
  width: 100%;
}

.toggle-button {
  width: 100%;
  background: transparent;
  border: none;
  color: white;
  text-align: left;
  font-weight: 600;
  cursor: pointer;
  font-size: 0.9rem;
  box-sizing: border-box;
  padding: 0;
}

.tooling-gallery-scroll {
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  gap: 1rem;
  padding: 1rem;
  width: 100%;
  max-width: 100%;
  flex-wrap: nowrap;
  box-sizing: border-box;
  min-width: 0;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

.tool-card-wrapper {
  flex: 0 0 auto;
  scroll-snap-align: start;
  width: 320px;
  max-width: 320px;
  min-width: 200px;
  max-height: 480px;
  display: flex;
  min-width: 0;
  box-sizing: border-box;
}

.tool-card-wrapper > * {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  min-width: 0;
}

/* Ensure the gallery respects the prose container's max-width */
.prose .tooling-gallery-container {
  max-width: 85ch;
  width: 100%;
  overflow: hidden;
}

.prose .tooling-gallery-scroll {
  max-width: 85ch;
  width: 100%;
  overflow-x: auto;
}

/* Smooth responsive breakpoints using container queries and CSS custom properties */
@media (min-width: 1024px) {
  .tooling-gallery-container {
    /* Smoothly scale from 25vw to 35vw as screen gets larger */
    max-width: clamp(25vw, calc(20vw + 5vw * (100vw - 1024px) / (1600px - 1024px)), 35vw);
  }
}

@media (min-width: 1600px) {
  .tooling-gallery-container {
    /* Maintain 35vw for very large screens */
    max-width: 35vw;
  }
}

/* For smaller screens, use a more gradual approach */
@media (max-width: 1023px) {
  .tooling-gallery-container {
    /* Smoothly scale from 100% on mobile to 35vw on tablet */
    max-width: clamp(100%, calc(100% - (100vw - 768px) * 0.65), 35vw);
  }
}

@media (max-width: 767px) {
  .tooling-gallery-container {
    /* Full width on mobile */
    max-width: 100%;
  }
}

.tool-gallery-error {
  color: #ff6b6b;
  background-color: rgba(255, 0, 0, 0.05);
  border: 1px solid rgba(255, 0, 0, 0.2);
  padding: 0.75rem;
  margin: 1rem;
  border-radius: 0.5rem;
  font-size: 0.9rem;
}

.tool-gallery-error ul {
  margin: 0.5rem 0 0;
  padding-left: 1.25rem;
}
</style>

<script type="module">
  function toggleToolGallery(id) {
    const container = document.getElementById(id);
    const scrollArea = container.querySelector('.tooling-gallery-scroll');
    const button = container.querySelector('.toggle-button');

    const isVisible = scrollArea.style.display !== 'none';
    scrollArea.style.display = isVisible ? 'none' : 'flex';
    button.textContent = isVisible ? 'Click to expand' : 'Click to close';
  }

  window.toggleToolGallery = toggleToolGallery;
</script>
