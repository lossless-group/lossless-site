---
interface Props {
  url: string;
  caption?: string;
}

const { url, caption } = Astro.props;

// Function to extract YouTube video ID from various YouTube URL formats
const extractYouTubeVideoId = (url: string): string | null => {
  // youtu.be format
  const youtuBeMatch = url.match(/youtu\.be\/([a-zA-Z0-9_-]+)/);
  if (youtuBeMatch) return youtuBeMatch[1];
  
  // youtube.com/watch format
  const watchMatch = url.match(/youtube\.com\/watch\?.*v=([a-zA-Z0-9_-]+)/);
  if (watchMatch) return watchMatch[1];
  
  // youtube.com/shorts format
  const shortsMatch = url.match(/youtube\.com\/shorts\/([a-zA-Z0-9_-]+)/);
  if (shortsMatch) return shortsMatch[1];
  
  // youtube.com/embed format
  const embedMatch = url.match(/youtube\.com\/embed\/([a-zA-Z0-9_-]+)/);
  if (embedMatch) return embedMatch[1];
  
  // youtube.com/v format
  const vMatch = url.match(/youtube\.com\/v\/([a-zA-Z0-9_-]+)/);
  if (vMatch) return vMatch[1];
  
  return null;
};

const videoId = extractYouTubeVideoId(url);

if (!videoId) {
  throw new Error(`Invalid YouTube URL: ${url}`);
}

// Check if this is a YouTube Shorts URL
const isShorts = url.includes('/shorts/');

// For youtu.be URLs, preserve the si parameter if present
let embedUrl = `https://www.youtube.com/embed/${videoId}`;

// Extract si parameter from youtu.be URLs
const siMatch = url.match(/[?&]si=([^&]+)/);
if (siMatch) {
  embedUrl += `?si=${siMatch[1]}`;
}
---

<div class={`youtube-embed-wrapper ${isShorts ? 'youtube-shorts' : ''}`}>
  <iframe 
    style={`aspect-ratio:${isShorts ? '9/16' : '16/9'};width:100%;height:auto;max-width:${isShorts ? '400px' : '100%'}`}
    src={embedUrl}
    title="YouTube video player" 
    frameborder="0" 
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
    referrerpolicy="strict-origin-when-cross-origin" 
    allowfullscreen
    loading="lazy"
  />
  {caption && (
    <div class="youtube-caption">
      <div class="caption-content">
        {caption}
      </div>
      <button 
        class="copy-url-btn" 
        onclick={`navigator.clipboard.writeText('${url}').then(() => {
          const btn = event.target.closest('.copy-url-btn');
          btn.classList.add('copied');
          setTimeout(() => {
            btn.classList.remove('copied');
          }, 2000);
        }).catch(err => console.error('Failed to copy: ', err))`}
        title="Copy video URL to clipboard"
      >
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M16 3H4V16" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M8 7H20V20H8V7Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>
  )}
</div>

<style>
  .youtube-embed-wrapper {
    margin: 1.5rem 0;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
  
  .youtube-embed-wrapper.youtube-shorts {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .youtube-embed-wrapper iframe {
    display: block;
    border: none;
  }
  
  .youtube-caption {
    padding: 0.75rem 1rem;
    background: rgba(255, 255, 255, 0.05);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    font-size: 0.9rem;
    line-height: 1.4;
    color: #e2e8f0;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.75rem;
  }
  
  .caption-content {
    flex: 1;
    min-width: 0;
  }
  
  .copy-url-btn {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 6px;
    padding: 0.5rem;
    cursor: pointer;
    font-size: 0.875rem;
    color: #e2e8f0;
    transition: all 0.2s ease;
    flex-shrink: 0;
    min-width: 2.5rem;
    height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .copy-url-btn:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }
  
  .copy-url-btn:active {
    transform: translateY(0);
  }
  
  .copy-url-btn.copied {
    background: rgba(34, 197, 94, 0.2);
    border-color: rgba(34, 197, 94, 0.4);
    color: #4ade80;
  }
  
  .copy-url-btn svg {
    width: 16px;
    height: 16px;
    transition: all 0.2s ease;
  }
</style>
