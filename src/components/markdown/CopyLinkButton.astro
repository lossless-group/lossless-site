---
const { id, label } = Astro.props;
---
<button
  class="copy-btn"
  data-copy-id={id}
  title={`Copy link to ${label}`}
  aria-label={`Copy link to ${label}`}
>
  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M16 2H8C7.45 2 7 2.45 7 3V4H6C4.9 4 4 4.9 4 6V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V6C20 4.9 19.1 4 18 4H17V3C17 2.45 16.55 2 16 2ZM16 4H8V3H16V4ZM18 20H6V6H7V7H17V6H18V20Z" fill="currentColor"/>
  </svg>
</button>

<style>
  .copy-btn {
    background: none;
    border: none;
    color: var(--clr-text-muted);
    cursor: pointer;
    padding: 0.2rem 0.3rem;
    margin-left: 0.3rem;
    border-radius: 4px;
    opacity: 0.7;
    transition: opacity 0.2s, color 0.2s;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
  }

  .copy-btn:hover,
  .copy-btn:focus-visible {
    opacity: 1;
    color: var(--clr-primary);
    outline: none;
  }

  .copy-btn.copied {
    color: var(--color-success);
    opacity: 1;
  }
</style>

<script is:inline>
  document.addEventListener('click', async (e) => {
    const button = e.target.closest('.copy-btn');
    if (!button) return;

    e.preventDefault();
    
    const headingId = button.getAttribute('data-copy-id');
    if (!headingId) return;
    
    const url = `${window.location.origin}${window.location.pathname}#${headingId}`;
    
    try {
      // Try Web Share API first
      if (navigator.share) {
        const shareData = {
          title: document.title,
          text: button.getAttribute('aria-label') || '',
          url: url
        };
        
        // Add OpenGraph image if available
        const ogImage = document.querySelector('meta[property="og:image"]');
        if (ogImage) {
          try {
            shareData.files = [
              new File([ogImage.content], 'og-image.jpg', { type: 'image/jpeg' })
            ];
          } catch (e) {
            console.warn('Could not add image to share data:', e);
          }
        }
        
        await navigator.share(shareData);
      } else {
        throw new Error('Web Share API not supported');
      }
    } catch (err) {
      // Fall back to clipboard if sharing fails or is not supported
      if (err.name !== 'AbortError') {
        try {
          await navigator.clipboard.writeText(url);
          button.classList.add('copied');
          setTimeout(() => button.classList.remove('copied'), 2000);
        } catch (clipboardErr) {
          console.error('Failed to copy to clipboard:', clipboardErr);
          // Fallback for older browsers
          const input = document.createElement('input');
          input.value = url;
          document.body.appendChild(input);
          input.select();
          document.execCommand('copy');
          document.body.removeChild(input);
          
          button.classList.add('copied');
          setTimeout(() => button.classList.remove('copied'), 2000);
        }
      }
    }
  });
</script>

<style>
  .copy-btn {
    background: none;
    border: none;
    padding: 0.2rem 0.3rem;
    margin-left: 0.3rem;
    cursor: pointer;
    color: var(--clr-text-muted);
    line-height: 1;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
    border-radius: 4px;
    transition: background-color 0.2s ease, color 0.2s ease;
  }
  
  .copy-btn:hover {
    background-color: var(--clr-bg-hover);
    color: var(--clr-lossless-accent--brightest);
  }

  .copy-btn .icon {
    width: 0.9em;
    height: 0.9em;
    transition: transform 0.2s ease, color 0.2s ease;
  }

  .copy-btn:hover {
    color: var(--clr-lossless-accent--brightest);
  }

  .copy-btn:hover .icon {
    transform: scale(1.05);
  }

  .copy-btn.copied {
   color: rgb(0, 233, 233);
  }

  .copy-btn.copied .icon {
    animation: copied-ping 0.3s ease;
  }

  @keyframes copied-ping {
    0%   { transform: scale(1); }
    50%  { transform: scale(1.2); }
    100% { transform: scale(1); }
  }

  
</style>
