---
const { id, label, title, bannerImage, articleTitle } = Astro.props;

---
<button
  class="copy-btn"
  data-copy-id={id}
  data-header-title={label}
  title={`Copy link to ${label}`}
  aria-label={`Copy link to ${label}`}
>
  <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor"
       stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
       xmlns="http://www.w3.org/2000/svg">
    <path d="M10 13a5 5 0 0 1 0-7l1-1a5 5 0 0 1 7 7l-1 1"/>
    <path d="M14 11a5 5 0 0 1 0 7l-1 1a5 5 0 0 1-7-7l1-1"/>
  </svg>
</button>

<script is:inline>
  document.addEventListener("click", (e) => {
    const btn = e.target.closest(".copy-btn");
    if (!btn) return;

    const headingId = btn.dataset.copyId;
    
    // Create URL with just the hash fragment for direct heading navigation
    const baseUrl = window.location.origin + window.location.pathname;
    const url = `${baseUrl}#${headingId}`;

    navigator.clipboard.writeText(url)
      .then(() => {
        btn.classList.add("copied");
        setTimeout(() => btn.classList.remove("copied"), 800);
      })
      .catch((err) => {
        console.error("Clipboard error:", err);
        alert("Copy failed");
      });
  });
</script>


<style>
  .copy-btn {
    background: none;
    border: none;
    padding: 0;
    margin-left: 0.3rem;
    cursor: pointer;
    color: #999;
    line-height: 1;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
  }

  .copy-btn .icon {
    width: 0.9em;
    height: 0.9em;
    transition: transform 0.2s ease, color 0.2s ease;
  }

  .copy-btn:hover {
    color: var(--clr-lossless-accent--brightest);
  }

  .copy-btn:hover .icon {
    transform: scale(1.05);
  }

  .copy-btn.copied {
    color: rgb(0, 233, 233);
  }

  .copy-btn.copied .icon {
    animation: copied-ping 0.3s ease;
  }

  @keyframes copied-ping {
    0%   { transform: scale(1); }
    50%  { transform: scale(1.2); }
    100% { transform: scale(1); }
  }
</style>
