---
/**
 * ChangelogEntry.astro
 * Renders a single changelog entry using the base CollectionEntryRow component
 *
 * @component
 * @example
 * ```astro
 * <ChangelogEntry
 *   title="New Feature Release"
 *   date="2025-03-18"
 *   version="1.0.0"
 *   category="Feature"
 * >
 *   <p>Added new functionality...</p>
 * </ChangelogEntry>
 * ```
 */

import { formatDate } from "@utils/formatDate";
import AuthorHandle from "@components/basics/AuthorHandle.astro";
import { marked } from "marked";

// Props are kept flexible with minimal requirements
const {
  title,
  date,
  category,
  categories,
  contextSetter,
  slug,
  class: className,
  authors = [],
  body,
  id,
} = Astro.props;

// Format the date consistently if it exists
const formattedDate = date ? formatDate(new Date(date)) : "";

// Normalize categories to always be an array
const normalizeCategories = () => {
  if (categories) {
    // If categories is already an array, use it
    return Array.isArray(categories) ? categories : [categories];
  } else if (category) {
    // If only category is present (string), convert to array
    return Array.isArray(category) ? category : [category];
  }
  return [];
};

const categoryList = normalizeCategories();

// Only render AuthorHandle if we have authors
const hasAuthors = Array.isArray(authors) && authors.length > 0;

//Preview the body content
const tags = marked.lexer(body);
const preview = tags?.slice(0, 6);
const rest = tags?.slice(6, tags?.length);
---

<div class:list={["changelog-entry", className]}>
  <div class="changelog-entry__meta">
    {
      hasAuthors && (
        <div class="changelog-entry__author">
          <!--
           * AuthorHandle is called here to render the author information for the changelog entry.
           *
           * Props passed:
           * - authors: authors (from changelog entry data)
           * - showName: true (display author name)
           * - showRole: false (do not display author role)
           * - nameClass: "author-name--changelog" (for larger, lighter, stronger name)
           * - color: "" (not used here)
           *
           * NOTE: Do NOT include the base class "author-name" in nameClass; it is always applied by AuthorHandle.
           * All font size and style for changelog is handled by .author-name--changelog.
           *
           * Other places AuthorHandle is called:
           * - [List all other places as you add them]
           -->
          <AuthorHandle 
            authors={authors} 
            showName={true} 
            showRole={false}
            nameClass="author-name--changelog" 
            color="" 
          />
        </div>
      )
    }

    <div class="changelog-entry__tags">
      {
        categoryList.map((cat) => (
          <span class="changelog-entry__category">{cat}</span>
        ))
      }
    </div>
    <div>
      {formattedDate && <time datetime={formattedDate}>{formattedDate}</time>}
    </div>
  </div>
  <div class="changelog-entry__container">
    <div class="changelog-entry__header">
      {
        contextSetter && (
          <h5 class="changelog-entry__emphasis">{contextSetter}</h5>
        )
      }
      {
        title && (
          <h5 class="changelog-entry__title">
            <a
              href={`/log/${slug || ""}`}
              class="changelog-entry__link"
              onclick=""
            >
              {title}
            </a>
          </h5>
        )
      }
    </div>

    <div class="changelog-entry__body">
      {/* Render the body content */}
      <div class="changelog-entry__content" set:html={marked.parser(preview)} />
      <div
        class="changelog-entry__content hidden"
        set:html={marked.parser(rest)}
        id={`content-${id}`}
      />
      <div class="changelog-entry__button" id={`toggle-${id}`}>Read Full Entry â†’</div>
    </div>
  </div>
</div>

<style>
  .changelog-entry {
    padding: 1rem;
    position: relative;
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    justify-content: center;
    min-height: 200px; /* Ensure minimum height for entries */
    max-width: 1200px;
    margin: 0 auto 3rem;
  }

  .changelog-entry__container {
    flex: 1;
  }

  /* Header Section */
  .changelog-entry__header {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
    margin-top: 0.3rem;
  }

  /* Meta Information */
  .changelog-entry__meta {
    font-family: var(--ff-legible);
    margin-bottom: 0.5rem;
    position: sticky;
    top: 6rem;
    width: 12rem;
  }

  @media (max-width: 800px) {
    .changelog-entry {
      flex-direction: column;
      align-items: stretch;
      gap: 0.5rem;
    }
    .changelog-entry__meta {
      position: relative;
      top: auto;
    }
  }

  .author-name {
    color: var(--clr-lossless-primary-light);
    font-weight: var(--fw-semi-bold);
    font-size: var(--fs-200);
  }

  /*
   * Custom style for changelog author name variant is now in site/src/styles/avatars.css for global availability.
   * Remove this local/global style block to prevent confusion and ensure DRYness.
   */

  .changelog-entry__tags {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 0.5rem;
    margin-bottom: 1rem;
  }

  time {
    color: var(--white--pure);
    font-weight: var(--fw-semi-bold);
    font-size: var(--fs-200);
  }

  .changelog-entry__category {
    padding: 0.2rem 0.5rem;
    border-radius: 0.25rem;
    background: var(--clr-lossless-attn-action);
    color: var(--white--pure);
    font-size: var(--fs-200);
    font-weight: var(--fw-semi-bold);
  }

  .changelog-entry__author {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
  }

  /* Style the author handle components */
  :global(.changelog-entry__author .author-handle) {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  :global(.changelog-entry__author .author-name) {
    color: var(--clr-lossless-attn-action);
    font-weight: var(--fw-semi-bold);
    font-size: var(--fs-200);
  }

  :global(.changelog-entry__author .author-avatar figure) {
    border-color: var(--clr-lossless-attn-action) !important;
  }

  .changelog-entry__emphasis {
    font-size: var(--fs-500);
    color: var(--clr-heading);
    margin: 0;
    line-height: 1.2;
  }

  .changelog-entry__title {
    font-size: var(--fs-600);
    font-family: var(--ff-legible);
    margin: 0;
    line-height: 1.2;
  }

  .changelog-entry__link {
    color: inherit;
    text-decoration: none;
    transition: color 0.2s ease;
    color: var(--clr-heading);
  }

  .changelog-entry__link:hover {
    color: var(--clr-lossless-attn-action);
  }

  .changelog-entry__body {
    margin-top: 1rem;
    color: var(--clr-body);
    flex: 1;
  }

  .changelog-entry__footer {
    margin-top: 2rem; /* Increased spacing */
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto; /* Push to bottom */
    padding-top: 1rem;
    border-top: 1px solid rgba(0, 0, 0, 0.05); /* Subtle separator */
  }

  .changelog-entry__button {
    display: inline-block;
    color: var(--clr-heading);
    text-decoration: underline;
    border-radius: 0.25rem;
    font-family: var(--ff-legible);
    font-size: var(--fs-300);
    font-weight: var(--fw-semi-bold);
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .changelog-entry__content :global(h1) {
    font-size: var(--fs-500);
    margin: 2rem 0 1rem;
  }

  .changelog-entry__content :global(h3) {
    font-size: var(--fs-300);
    margin: 2rem 0 1rem;
  }

  .changelog-entry__content :global(h2) {
    font-size: var(--fs-400);
    margin: 2rem 0 1rem;
  }

  .changelog-entry__content :global(p) {
    margin: 1rem 0;
  }

  .changelog-entry__content :global(ul) {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  .changelog-entry__content :global(li) {
    margin: 0.5rem 0;
  }

  .hidden {
    display: none;
  }
</style>

<script type="module" is:inline define:vars={{ id }}>
  const toggleBtn = document.getElementById(`toggle-${id}`);
  const content = document.getElementById(`content-${id}`);

  toggleBtn.addEventListener("click", () => {
    content.classList.remove("hidden");
    toggleBtn.classList.add("hidden");
  });
</script>
