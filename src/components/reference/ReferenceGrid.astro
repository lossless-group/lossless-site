---
import type { CollectionEntry } from 'astro:content';
import VocabularyPreviewCard from '@components/reference/VocabularyPreviewCard.astro';
import ConceptPreviewCard from '@components/reference/ConceptPreviewCard.astro';

type ReferenceData = {
  title: string;
  slug?: string;
  aliases?: string[];
  description?: string;
};

interface ReferenceItem {
  id: string;
  slug: string;
  collection: 'vocabulary' | 'concepts';
  data: ReferenceData;
  originalFilename: string;
}

interface Props {
  items: ReferenceItem[];
  class?: string;
}

const { items, class: className } = Astro.props;

// FIX: Define renderedGridItems in the frontmatter so it is available to the template below.
const renderedGridItems = items.map((item) => {
  // DEBUG: Print the item as passed to the preview card, to verify originalFilename and all fields
  console.log('[ReferenceGrid] Passing item to card:', item);
  return {
    collection: item.collection,
    entry: item,
  };
});
---

<div class:list={[
    "grid",
    "grid-cols-1", // Default: 1 column
    "md:grid-cols-2", // Medium screens: 2 columns
    "lg:grid-cols-3", // Large screens: 3 columns
    "gap-4", // Apply gap using Tailwind utility (adjust value if needed)
    className // Include any passed-in class
  ]}>
  {renderedGridItems.map(({ collection, entry }) => (
    <div>
      {collection === 'vocabulary' ? (
        <VocabularyPreviewCard entry={entry} />
      ) : collection === 'concepts' ? (
        <ConceptPreviewCard entry={entry} />
      ) : (
        <p>Error: Unknown item type</p>
      )}
    </div>
  ))}
</div>