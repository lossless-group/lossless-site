---
/**
 * ReferenceNavRow.astro
 * 
 * Navigation row for the reference section, showing links to different reference types
 * and the total word count.
 * 
 * @component
 * @param {number} vocabularyCount - Number of vocabulary items
 * @param {number} conceptsCount - Number of concept items
 * @param {number} totalWords - Total word count across all reference items
 */

interface Props {
  vocabularyCount: number;
  conceptsCount: number;
  vocabularyWordCount: number;
  conceptsWordCount: number;
  currentPage?: 'all' | 'vocabulary' | 'concepts';
}

const { 
  vocabularyCount, 
  conceptsCount, 
  vocabularyWordCount,
  conceptsWordCount,
  currentPage = 'all'
} = Astro.props;

// Calculate total words for the current page
const currentPageWordCount = currentPage === 'all' 
  ? vocabularyWordCount + conceptsWordCount 
  : currentPage === 'vocabulary' 
    ? vocabularyWordCount 
    : conceptsWordCount;

const getButtonClass = (page: string) => {
  const baseClass = 'px-4 py-2 rounded-md flex items-center gap-2 transition-colors';
  const activeClass = 'bg-blue-600 text-white hover:bg-blue-700';
  const inactiveClass = 'bg-gray-700 text-white hover:bg-gray-600';
  
  return `${baseClass} ${currentPage === page ? activeClass : inactiveClass}`;
};

// Format large numbers with K/M suffixes
const formatCount = (count: number): string => {
  if (count >= 1000000) {
    return `${(count / 1000000).toFixed(1)}M+`;
  } else if (count >= 1000) {
    return `${(count / 1000).toFixed(1)}K+`;
  }
  return count.toString();
};
---

<div class="flex flex-wrap items-center gap-4 mb-8">
  <div class="flex gap-4">
    <a 
      href="/more-about" 
      class={getButtonClass('all')}
    >
      All Reference
    </a>
    <a 
      href="/more-about/vocabulary" 
      class={getButtonClass('vocabulary')}
    >
      Vocabulary
      <span class="text-xs font-medium px-2 py-0.5 rounded-full bg-opacity-80">
        {vocabularyCount}
      </span>
    </a>
    <a 
      href="/more-about/concepts" 
      class={getButtonClass('concepts')}
    >
      Concepts
      <span class="text-xs font-medium px-2 py-0.5 rounded-full bg-opacity-80">
        {conceptsCount}
      </span>
    </a>
  </div>
  <div class="text-sm text-gray-400 ml-2">
    Words: {formatCount(currentPageWordCount)}
  </div>
</div>
