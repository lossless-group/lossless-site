---
// StoryStickyFooterNav.astro
// Renders a sticky footer with Next/Prev controls and a progress bar.
// Uses CSS variables for colors and spacing; Tailwind utility classes for layout.
// No external dependencies.

export interface Step {
  title: string;
  href: string;
  description?: string;
}

interface Props {
  seriesTitle?: string;
  currentIndex: number; // 0-based
  steps: Step[];
  logoUrl?: string;
}

const { seriesTitle = 'Story', currentIndex, steps, logoUrl }: Props = Astro.props;
const total = steps.length;
const prev = currentIndex > 0 ? steps[currentIndex - 1] : undefined;
const next = currentIndex < total - 1 ? steps[currentIndex + 1] : undefined;
const progressPct = total > 0 ? Math.round(((currentIndex + 1) / total) * 100) : 0;
---

<section class="w-full" aria-label={seriesTitle}>
  <header class="max-w-5xl mx-auto px-4 py-6 flex items-center gap-4">
    {logoUrl && (
      <img src={logoUrl} alt={seriesTitle + ' logo'} width="40" height="40" class="rounded" style="background: var(--surface-2)" />
    )}
    <div>
      <h2 class="text-xl font-semibold" style="color: var(--clr-heading)">{seriesTitle}</h2>
      <p class="text-sm opacity-80" style="color: var(--clr-body)">{currentIndex + 1} of {total}</p>
    </div>
  </header>

  <div class="max-w-5xl mx-auto px-4 grid gap-4">
    <div class="progress-rail">
      <div class="progress-fill" style={`width: ${progressPct}%;`}></div>
    </div>
  </div>

  <nav class="sticky-bar">
    <div class="max-w-5xl mx-auto px-4 py-3 flex items-center justify-between gap-3">
      <a href={prev ? prev.href : '#'} aria-disabled={!prev} class:list={["nav-btn nav-btn--ghost", { disabled: !prev }]}>
        ← Prev
      </a>

      <div class="flex-1 text-center text-sm step-readout">
        Step {currentIndex + 1} of {total}
      </div>

      <a href={next ? next.href : '#'} aria-disabled={!next} class:list={["nav-btn nav-btn--accent", { disabled: !next }]}>
        Next →
      </a>
    </div>
  </nav>
</section>

<style>
  .progress-rail {
    width: 100%;
    height: 0.5rem;
    border-radius: 999px;
    overflow: hidden;
    background: var(--surface-2);
    border: 1px solid var(--clr-lossless-ui-btn-border);
  }
  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--clr-lossless-accent), var(--clr-lossless-primary-dark));
    transition: width 220ms ease-out;
  }

  .sticky-bar {
    /* Section-scoped footer (not page-fixed) */
    position: static;
    border-top: 1px solid var(--clr-lossless-ui-btn-border);
    background: color-mix(in oklab, var(--clr-lossless-primary-glass), transparent 20%);
    backdrop-filter: blur(6px);
    box-shadow: 0 -6px 20px color-mix(in oklab, black, transparent 92%);
    margin-top: 0.5rem;
  }

  .nav-btn {
    display: inline-flex; align-items: center; justify-content: center;
    padding: 0.5rem 0.9rem; border-radius: 0.5rem; text-decoration: none;
    font-size: var(--fs-300);
    transition: transform 120ms ease, background 160ms ease, color 160ms ease, opacity 120ms ease;
    border: 1px solid var(--clr-lossless-ui-btn-border);
    user-select: none;
  }
  .nav-btn--ghost { color: var(--clr-body); background: var(--surface-2); }
  .nav-btn--accent { color: var(--clr-heading); background: var(--clr-lossless-primary-glass); }
  .nav-btn:hover { transform: translateY(-1px); }
  .nav-btn.disabled { opacity: 0.5; pointer-events: none; }

  .step-readout { color: color-mix(in oklab, var(--clr-body), black 10%); }
</style>
