---
/**
 * StorySidebarTree.astro
 * Left sidebar hierarchical tree with breadcrumb header.
 * Props:
 * - breadcrumb: { label: string, href?: string }[]
 * - nodes: TreeNode[] where TreeNode = { title, href, children?: TreeNode[] }
 * - currentHref: string (to highlight active)
 */

export interface Crumb { label: string; href?: string }
export interface TreeNode { title: string; href: string; children?: TreeNode[] }

interface Props {
  breadcrumb: Crumb[];
  nodes: TreeNode[];
  currentHref?: string;
}

const { breadcrumb = [], nodes = [], currentHref = '' }: Props = Astro.props;
---

<section class="max-w-6xl mx-auto px-4 grid md:grid-cols-[260px_1fr] gap-6" aria-label="Story Navigation">
  <aside class="md:sticky md:top-16 md:self-start p-3 rounded border" style="background: var(--surface); border-color: var(--surface-2)">
    <nav aria-label="Breadcrumb" class="mb-3 text-sm flex flex-wrap items-center gap-1">
      {breadcrumb.map((c, i) => (
        <span>
          {c.href ? <a href={c.href} style="color: var(--accent)">{c.label}</a> : <span style="color: var(--muted-text)">{c.label}</span>}
          {i < breadcrumb.length - 1 && <span style="color: var(--muted-text)"> / </span>}
        </span>
      ))}
    </nav>
    <ul class="space-y-1">
      {nodes.map((n) => (
        <li>
          <a
            href={n.href}
            class={["block px-2 py-1 rounded", n.href === currentHref ? "font-semibold" : ""].join(" ")}
            style={`color: var(--text); ${n.href === currentHref ? 'background: var(--surface-2);' : ''}`}
          >
            {n.title}
          </a>
          {n.children && n.children.length > 0 && (
            <ul class="ml-3 border-l pl-3 mt-1 space-y-1" style="border-color: var(--surface-2)">
              {n.children.map((c) => (
                <li>
                  <a
                    href={c.href}
                    class={["block px-2 py-1 rounded", c.href === currentHref ? "font-semibold" : ""].join(" ")}
                    style={`color: var(--text); ${c.href === currentHref ? 'background: var(--surface-2);' : ''}`}
                  >
                    {c.title}
                  </a>
                </li>
              ))}
            </ul>
          )}
        </li>
      ))}
    </ul>
  </aside>
  <div>
    <slot />
  </div>
</section>
