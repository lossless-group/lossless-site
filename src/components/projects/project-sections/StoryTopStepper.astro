---
/**
 * StoryTopStepper.astro
 * Horizontal top stepper with clickable steps and active indicator.
 * Props:
 * - steps: { title, href }[]
 * - currentIndex: number
 * - seriesTitle?: string
 */

export interface Step { title: string; href: string }
interface Props {
  steps: Step[];
  currentIndex: number;
  seriesTitle?: string;
}

const { steps = [], currentIndex = 0, seriesTitle = 'Story' }: Props = Astro.props;
---

<section class="w-full" aria-label={seriesTitle}>
  <div class="stepper-divider">
    <ol class="max-w-6xl mx-auto px-4 flex flex-wrap items-center gap-2 py-3">
      {steps.map((s, i) => (
        <li class="flex items-center gap-2">
          <a
            href={s.href}
            class={[
              'step-pill',
              i === currentIndex ? 'step-pill--active' : 'step-pill--idle'
            ].join(' ')}
          >
            <span class="step-index">{i + 1}.</span> {s.title}
          </a>
          {i < steps.length - 1 && <span class="chev">â†’</span>}
        </li>
      ))}
    </ol>
  </div>
  <div class="max-w-6xl mx-auto px-4 py-6">
    <slot />
  </div>
</section>

<style>
  .stepper-divider {
    border-bottom: 1px solid var(--clr-lossless-ui-btn-border);
    background: linear-gradient(
      to right,
      color-mix(in oklab, var(--clr-lossless-accent) 25%, transparent),
      transparent 20%,
      transparent 80%,
      color-mix(in oklab, var(--clr-lossless-accent) 25%, transparent)
    );
    background-size: 100% 2px;
    background-repeat: no-repeat;
    background-position: bottom left;
  }

  .step-pill {
    display: inline-flex;
    align-items: center;
    gap: 0.35rem;
    padding: 0.4rem 0.7rem;
    font-size: var(--fs-300);
    border-radius: 0.5rem;
    transition: transform 120ms ease, background 160ms ease, color 160ms ease, box-shadow 160ms ease;
    text-decoration: none;
    border: 1px solid transparent;
  }
  .step-pill--idle {
    color: var(--clr-body);
    background: var(--surface-2);
    border-color: var(--clr-lossless-ui-btn-border);
  }
  .step-pill--active {
    color: var(--clr-heading);
    background: var(--clr-lossless-primary-glass);
    border-color: var(--clr-lossless-ui-btn-border);
    box-shadow: 0 2px 8px color-mix(in oklab, var(--clr-lossless-primary-dark), transparent 70%);
    position: relative;
  }
  .step-pill:hover { transform: translateY(-1px); }

  .step-index { opacity: 0.9; }

  .chev {
    font-size: 0.8rem;
    color: color-mix(in oklab, var(--clr-body), black 10%);
    opacity: 0.7;
  }

  /* Active underline animation */
  .step-pill--active::after {
    content: "";
    position: absolute;
    left: 8px; right: 8px; bottom: -6px;
    height: 2px;
    background: linear-gradient(90deg, var(--clr-lossless-accent), var(--clr-lossless-primary-dark));
    transform: scaleX(0);
    transform-origin: left center;
    animation: pill-underline 380ms ease forwards;
  }
  @keyframes pill-underline { to { transform: scaleX(1); } }
  @media (prefers-reduced-motion: reduce) {
    .step-pill--active::after { animation: none; transform: scaleX(1); }
  }
</style>
