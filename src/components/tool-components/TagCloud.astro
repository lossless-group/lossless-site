---
import TagChip from "./TagChip.astro";

interface Props {
  tags: string[];
  tagFrequencies?: Record<string, number>;
  visibleTagRowLimit?: number;
  maxWidth?: string;
}

const {
  tags: rawTags,
  tagFrequencies = {},
  visibleTagRowLimit = 4,
  maxWidth = "100%",
} = Astro.props;

// Ensure tags is always an array
const tags = rawTags ?? [];

// Calculate approximate row height based on tag chip height + gap
const rowHeight = 26; // Tag height (22px) + gap (6px)
const maxHeight = visibleTagRowLimit * rowHeight;
---

<div class="tool-cloud">
  <div
    class="tool-tags"
    style={`max-height: ${maxHeight}px; max-width: ${maxWidth};`}
  >
    {
      tags.map((tag) => (
        <TagChip
          tag={tag}
          count={tagFrequencies && tagFrequencies[tag] > 0 ? tagFrequencies[tag] : undefined}
          includeCount={!!tagFrequencies}
        />
      ))
    }
  </div>
</div>

<style>
  .tool-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: 0.2em;
    width: 100%;
    justify-content: space-between;
  }

  .tool-tags {
    display: flex;
    flex-flow: row wrap;
    gap: 0.2em;
    width: 100%;
    overflow-y: hidden;
    padding: 0.4em 0.6em;
    justify-content: space-between; /* Add space for potential scrollbar */
  }

  /* Show scrollbar on hover if content overflows */
  .tool-tags:hover {
    background: var(--clr-lossless-primary-dark-80);
    border: 0.1em solid var(--clr-lossless-primary-glass);
    border-radius: 1em;
    overflow-y: auto; /* Change from hidden to auto on hover */
    z-index: 5; /* Lower z-index to ensure tag chips appear above */
  }

  /* Customize scrollbar */
  .tool-tags::-webkit-scrollbar {
    width: 6px;
  }

  .tool-tags::-webkit-scrollbar-track {
    background: transparent;
  }

  .tool-tags::-webkit-scrollbar-thumb {
    background: var(--clr-lossless-primary-dark);
    border-radius: 3px;
  }

  .tool-tags::-webkit-scrollbar-thumb:hover {
    background: var(--clr-lossless-primary-glass);
  }
</style>
