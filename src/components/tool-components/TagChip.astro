---
interface Props {
  tag: string;
  count?: number;
  selected?: boolean;
  includeCount?: boolean;
  isSelected?: boolean;
  title?: string;
  href?: string;
  [key: string]: any; // Allow other HTML attributes such as aria-label, onClick, etc.
}

const { 
  tag, 
  count = 0, 
  includeCount = false, 
  isSelected = false, 
  selected = false, 
  title,
  href,
  ...rest 
} = Astro.props;

function trainCaseToNormalCase(tag: string): string {
  return tag
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
}

const normalCase = trainCaseToNormalCase(tag);
const isTagSelected = selected || isSelected;
---

<a 
  href={href || `/toolkit/${tag}`} 
  class={`tool-tag${isTagSelected ? ' selected' : ''}`} 
  title={title || `Click to filter by ${normalCase}`}
  aria-label={`Filter by ${normalCase}${isTagSelected ? ' (currently selected)' : ''}`}
  data-tag={tag}
  {...rest}
>
  <p>{normalCase}</p>
  {(includeCount && count > 0) || count !== undefined ? <span class="count">({count})</span> : null}
</a>

<style>
  /* Container to handle the hover effect */
  .tool-tag {
    background: var(--clr-lossless-primary-dark);
    color: var(--clr-lossless-primary-glass);
    border-radius: 0.25em;
    white-space: nowrap;
    padding: 0.1em 0.1em;
    display: inline-block;
    height: fit-content;
    position: relative;
    cursor: pointer;
    border: 1px solid transparent;
    transition: all 0.2s ease-in-out;
    margin: 3px;
    overflow: visible;
  }

  /* Content styling */
  .tool-tag p {
    font-size: var(--fs-250);
    margin: 0;
    display: inline-block;
  }

  /* Direct hover style in the component to ensure it works */
  .tool-tag:hover {
    background-color: #3a3a45;
    border-color: var(--clr-lossless-accent--brightest);
    color: var(--clr-lossless-primary-glass--lighter);
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  /* Selected state styling */
  .tool-tag.selected {
    background-color: var(--clr-lossless-accent);
    color: var(--clr-white, #ffffff);
    border-color: var(--clr-lossless-accent);
    box-shadow: 0 0 5px rgba(255, 165, 0, 0.5);
  }

  .count {
    margin-left: 0.3em;
    opacity: 0.8;
    font-size: 0.9em;
  }
</style>
