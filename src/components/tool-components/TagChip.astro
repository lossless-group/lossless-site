---
interface Props {
  tag: string;
  count?: number;
  includeCount?: boolean;
  isSelected?: boolean;
  title?: string;
  [key: string]: any; // Allow other HTML attributes such as aria-label, onClick, etc.
}

const { tag, count = 0, includeCount = false, isSelected = false, title } = Astro.props;
---

<a href={`/toolkit/${tag}`} class={`tool-tag${isSelected ? ' selected' : ''}`} title={title}>
  <p>{tag}{includeCount && count > 0 && <span class="count">({count})</span>}</p>
</a>

<style>
  .tool-tag {
    background: var(--clr-lossless-primary-dark);
    color: var(--clr-lossless-primary-glass);
    border-radius: 0.25em;
    white-space: nowrap;
    /* Removed transition property - now handled by transition-colors class */
    padding: 0.2em 0.3em;
    display: inline-flex;
    align-items: center;
    height: fit-content;
    position: relative; /* Add position relative */
    z-index: 20; /* Ensure tag chips are above the tag cloud */
    cursor: pointer; /* Add cursor pointer to indicate clickable */
    border: 1px solid transparent; /* Add transparent border for hover effect */
    & p {
      font-size: var(--fs-200);
      margin: 0;
    }
  }

  /* Direct hover style in the component to ensure it works */
  .tool-tag:hover {
    background-color: #3a3a45; /* Subtle darker color */
    border-color: var(--clr-lossless-accent--brightest); /* Accent color border */
    color: var(--clr-lossless-primary-glass--lighter); /* Slightly lighter text */
    transform: translateY(-2px) scale(1.05); /* Subtle elevation and growth */
    transition: background-color 0.2s ease-in-out, 
                border-color 0.2s ease-in-out,
                color 0.2s ease-in-out,
                transform 0.2s ease-in-out;
  }

  .tool-tag.selected {
    /* Add styles for selected state */
  }

  .count {
    margin-left: 0.3em;
    opacity: 0.8;
    font-size: 0.9em;
  }

  /* Removed .tool-tag:hover styles - now handled by hover-lighten class */
</style>
