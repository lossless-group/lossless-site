---
/**
 * Section__IconHeaderMessage.astro
 *
 * Renders a responsive grid of IconHeaderMessage cards based on a named instance (array) in iconHeaderMessages.json.
 *
 * - Defaults to two columns, responsive to one on small screens.
 * - Each card is populated using the IconHeaderMessage component.
 * - The instance prop determines which array of messages to render (e.g., "index" for index.astro).
 *
 * Props:
 * - instance: string (required) - the key in iconHeaderMessages.json to select the array for this page/section.
 *
 * Usage Example:
 * <Section__IconHeaderMessage instance="index" />
 *
 * Where this component is called:
 * - Used in any page/section that needs a grid of messages (e.g., index.astro, About page, etc.)
 * - Calls: IconHeaderMessage.astro (for each message)
 */

import IconHeaderMessage from './IconHeaderMessage.astro';
import iconHeaderMessages from '@content/messages/iconHeaderMessages.json';

interface Props {
  /** The key for the instance (e.g., "index") to select from the JSON */
  instance: string;
}

const { instance } = Astro.props;
const messages = iconHeaderMessages[instance] || [];

---

<!--
  Section__IconHeaderMessage renders a grid of IconHeaderMessage cards.
  - Uses CSS grid, defaults to two columns, stacks to one on mobile.
  - Aggressively commented for maintainability.
  - If no messages, displays a fallback message.
  - Each IconHeaderMessage is passed all relevant props from the JSON entry.
  - Calls: IconHeaderMessage.astro
  - Data source: site/src/content/messages/iconHeaderMessages.json
  - Usage locations: [update as adopted, e.g. index.astro]
-->
<section class="icon-header-message-section">
  {messages.length === 0 ? (
    <p class="text-center text-gray-500 py-8">No messages found for this section.</p>
  ) : (
    <div class="icon-header-message-grid">
      {messages.map((msg, idx) => (
        <IconHeaderMessage key={idx} {...msg} />
      ))}
    </div>
  )}
</section>

<style>
.icon-header-message-grid {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 2rem;
}
@media (max-width: 700px) {
  .icon-header-message-grid {
    grid-template-columns: 1fr;
  }
}
.icon-header-message-section {
  width: 100%;
  margin: 0 auto;
  padding: 2rem 0;
}
</style>