---
import ToolCard from "@components/tool-components/ToolCard.astro";
import BareToolCard from "@components/tool-components/BareToolCard.astro";

interface Props {
  gap?: string;
  minCardWidth?: string;
  tools: Array<Record<string, any>>;
}

const { gap = "2rem", tools = [] } = Astro.props;

const toolsWithImages = tools.filter(tool => tool.image);
const toolsWithoutImages = tools.filter(tool => !tool.image);
---

<div class="cards-container">
  <section class="tools-section">
    <div class="card-grid">
      {toolsWithImages.map(tool => (
        <ToolCard 
          {...tool} 
          filePath={tool.filePath} 
          class="tool-card" 
          data-tags={JSON.stringify(tool.tags || [])} 
        />
      ))}
      {toolsWithoutImages.map(tool => (
        <BareToolCard 
          {...tool} 
          filePath={tool.filePath} 
          class="tool-card" 
          data-tags={JSON.stringify(tool.tags || [])} 
        />
      ))}
    </div>
  </section>

  {tools.length === 0 && <p class="no-tools">No tools found</p>}
</div>

<style define:vars={{ gap }}>
  .cards-container {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 350px), 1fr));
    gap: var(--gap);
    width: 100%;
  }

  .tools-section {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .bare-tools-section {
    background-color: var(--clr-lossless-primary-dark);
    padding: 2rem;
    border-radius: 1rem;
  }

  .bare-tools-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1rem;
    width: 100%;
  }

  .no-tools {
    text-align: center;
    color: var(--clr-body);
    font-style: italic;
    padding: 2rem;
  }
</style>
