---
import ToolCard from "@components/tool-components/ToolCard.astro";
import BareToolCard from "@components/tool-components/BareToolCard.astro";

interface Props {
  gap?: string;
  minCardWidth?: string;
  tools: Array<Record<string, any>>;
  filterTag?: string;
}

const { gap = "2rem", tools = [], filterTag } = Astro.props;

// Filter tools by tag if filterTag is provided
const filteredTools = filterTag
  ? tools.filter(tool => 
      tool.tags?.some((tag: string) => tag === filterTag)
    )
  : tools;

const toolsWithImages = filteredTools.filter(tool => tool.image);
const toolsWithoutImages = filteredTools.filter(tool => !tool.image);

toolsWithImages.forEach(tool => {
  if (!tool.id) throw new Error("Missing tool.id in CardGrid");
});

// Pagination settings â€” TagColumn will use this value
const itemsPerPage = 50;
---

<div class="cards-container" data-items-per-page={itemsPerPage}>
  <section class="tools-section">
    <div class="card-grid" id="tool-card-grid">
      <!-- Render ALL ToolCards in DOM -->
      {toolsWithImages.map(tool => (
        <ToolCard 
          {...tool} 
          id={tool.id}
          filePath={tool.filePath} 
          class="tool-card" 
          data-tags={JSON.stringify(tool.tags || [])} 
        />
      ))}
      {toolsWithoutImages.map(tool => (
        <BareToolCard 
          {...tool} 
          filePath={tool.filePath} 
          class="tool-card" 
          data-tags={JSON.stringify(tool.tags || [])} 
        />
      ))}
    </div>

    {filteredTools.length > itemsPerPage && (
      <button id="load-more" class="load-more-btn">Load More</button>
    )}
  </section>

  {filteredTools.length === 0 && <p class="no-tools">No tools found</p>}
</div>

<style define:vars={{ gap }}>
  .cards-container {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: var(--gap);
    width: 100%;
    align-items: start;
  }

  .tools-section {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .no-tools {
    text-align: center;
    color: var(--clr-body);
    font-style: italic;
    padding: 2rem;
  }

  .load-more-btn {
    margin-top: 1rem;
    background-color: var(--clr-lossless-primary-glass);
    color: white;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 0.5rem;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s ease;
  }

  .load-more-btn:hover {
    background-color: var(--clr-lossless-primary-dark);
  }

  @media (max-width: 600px) {
    .card-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
