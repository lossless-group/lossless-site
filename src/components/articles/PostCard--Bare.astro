---
// site/src/components/articles/PostCard--Bare.astro
/**
 * PostCard--Bare Component
 *
 * Displays a compact article preview with an image, title, date, and optional description.
 * It constructs its link dynamically from a provided slug and base path.
 *
 * Props:
 * - slug: string - The article slug (e.g., 'my-article-slug').
 * - imageSrc: string - Source URL for the article's preview image.
 * - imageAlt: string - Alt text for the preview image.
 * - title: string - The title of the article.
 * - date: string | Date - The publication date of the article (expected as string or Date object).
 * - description?: string - Optional short description or lede of the article.
 * - imgWidth?: number | string - Optional width for the image.
 * - imgHeight?: number | string - Optional height for the image.
 * - class?: string - Optional additional CSS classes for the root <a> element.
 * - basePath?: string - Optional base path for the article URL.
 * - All other attributes are passed to the root <a> element.
 */

import type { HTMLAttributes } from 'astro/types';
import { formatDate } from "@utils/formatDate";

interface Props extends Omit<HTMLAttributes<'a'>, 'class'> {
  slug: string;
  imageSrc: string;
  imageAlt: string;
  title: string;
  date?: string | Date;
  description?: string;
  imgWidth?: number | string;
  imgHeight?: number | string;
  class?: string;
  collection?: string;
  basePath?: string;
  [key: string]: any;
}

const {
  slug: slugProp,
  imageSrc,
  imageAlt,
  title,
  date,
  description,
  imgWidth,
  imgHeight,
  class: customClasses = '', 
  collection = 'issue-resolution', 
  basePath,
  ...attrs 
} = Astro.props as Props;

import { ROUTE_PATHS } from '@utils/routing/routeManager';

// If basePath is provided, prepend it to the slug
const href = basePath 
  ? `${basePath.replace(/\/+$/, '')}/${slugProp.replace(/^\/+/, '')}`
  : slugProp.startsWith('/') 
    ? slugProp 
    : `/${slugProp}`;

// Format the date consistently if it exists
// Ensure date is treated as Date object for formatting
let displayDate = "";
if (date) {
  try {
    const dateObj = typeof date === 'string' ? new Date(date) : date;
    displayDate = formatDate(dateObj);
  } catch (error) {
    console.error(`Error formatting date for PostCard--Bare ('${title}'):`, error);
    // Fallback to original date string if formatting fails or if it's already a pre-formatted string
    displayDate = typeof date === 'string' ? date : (date as Date).toLocaleDateString(); 
  }
} else {
  displayDate = ""; // Or some default like 'Date not available'
}
---

<a
  class:list={[
    'group relative block w-full overflow-hidden rounded-lg',
    'transition-all duration-300 ease-in-out',
    'hover:shadow-xl hover:ring-2 hover:ring-primary-500/20',
    'focus:outline-none focus:ring-2 focus:ring-primary-500/50',
    'p-2', // Add padding to prevent ring from overlaying content
    'flex flex-col', // Use flexbox for better mobile layout control
    'min-h-0', // Prevent flex items from growing beyond container
    'h-full', // Ensure full height for grid alignment
    customClasses,
  ]}
  href={href}
  {...attrs}
>
  <div class="dark:border-base-600/60 border rounded-md border-base-300 justify-center overflow-hidden shrink-0 sm:justify-normal flex-shrink-0">
    <figure class="m-0">
      <img
        src={imageSrc || '/images/placeholders/default-banner.jpg'}
        alt={imageAlt || `Cover image for ${title}`}
        class="w-full transition-all duration-500 group-hover:scale-[1.02] h-auto max-h-96 object-cover"
        decoding="async"
        loading="lazy"
        width={imgWidth || 400}
        height={imgHeight || 225}
        onerror="this.onerror=null;this.src='/images/placeholders/default-banner.jpg'"
      />
    </figure>
  </div>
  <div class="w-full pt-1 flex-1 flex flex-col min-h-0"> 
    <h2 class="mt-1 font-semibold text-lg md:text-xl flex-shrink-0">{title}</h2>
    {description && <p class="mt-1 text-sm opacity-80 line-clamp-2 flex-shrink-0">{description}</p>}
    <p class="mt-1 opacity-70 text-sm whitespace-nowrap flex-shrink-0">{displayDate}</p> 
  </div>
</a>
<style>
  h2 {
    font-size: 1.6em;
  }
  
  /* Ensure proper grid item behavior on iOS */
  @supports (-webkit-touch-callout: none) {
    /* iOS-specific fixes */
    a {
      -webkit-transform: translateZ(0);
      transform: translateZ(0);
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden;
      contain: layout style;
    }
  }
  
  /* Mobile-specific height management */
  @media (max-width: 768px) {
    a {
      min-height: auto;
      height: auto;
    }
  }
</style>