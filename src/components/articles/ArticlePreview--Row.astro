---
/* =====================================================================>
   A wide, responsive preview of a content Article item in a content collection.
   Designed to be called as a list in a column. 
   Updated to match changelog requirements with two-column layout, metadata handling, and line clamping
/* =====================================================================>
??-- Type: Row Component
??-- Includes:
   //---- Styles to fill a column body.
   //---- Rendering of an pageName as Article Title, relevant frontmatter and image. 
??-- Affects:
   //---- Markdown files, Article Components, Articles Layout

??-- Rendered In:
   //---- pages/more-about/[more-about].astro
// Import TagChip component from @components/tool-components/TagChip.astro
// This import is necessary to resolve the 'Cannot find name TagChip' error
// and to enable the rendering of tags with proper tag routing and display logic
import TagChip from '@components/tool-components/TagChip.astro';

interface Props {
  pageName: string;
  relativePath: string;
  frontmatter: {
    title?: string;
    date_created?: string;
    date_authored_initial_draft?: string;
    authors?: string[];
    category?: string;
    description?: string;
    tags?: string[];
    [key: string]: any;
  }
}*/

const { pageName, relativePath, frontmatter }: { pageName: string; relativePath: string; frontmatter: any } = Astro.props;

// Use fallbacks for optional fields
const title = frontmatter.title || pageName;
const date = frontmatter.date_created || frontmatter.date_authored_initial_draft || 'No date';
const authors = Array.isArray(frontmatter.authors) ? frontmatter.authors : 
               (typeof frontmatter.authors === 'string' ? [frontmatter.authors] : []);
const description = frontmatter.description || frontmatter.synopsis || '';
const category = frontmatter.category || 'Uncategorized';
---

<article class="article-preview-row changelog-entry">
  <div class="metadata-column">
    <time datetime={date}>{new Date(date).toLocaleDateString()}</time>
    {authors.length > 0 && (
      <div class="authors">
        {authors.map((author: string) => (
          <span class="author">{author}</span>
        ))}
      </div>
    )}
    {frontmatter.category && (
      <span class="category">{category}</span>
    )}
  </div>
  
  <div class="content-column">
    <div class="header-box header">
      <h3><a href={relativePath}>{title}</a></h3>
    </div>
    <div class="text-box preview-text description line-clamp">
      <p>{description}</p>
    </div>
    // Render tags using TagChip.astro for proper tag routing and display logic
    {frontmatter.tags && frontmatter.tags.length > 0 && (
      <div class="tags">
        {frontmatter.tags.map((tag: string) => (
          // TagChip.astro expects tagString, not tag, and handles undefined
          <TagChip tagString={tag} route="vibe-with" />
        ))}
      </div>
    )}
  </div>
</article>

<style>
  .article-preview-row {
    display: grid;
    grid-template-columns: 20% 80%;
    gap: 1.5rem;
    padding: 1.5rem;
    border-bottom: 1px solid var(--border-color, #eaeaea);
  }

  .metadata-column {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    font-size: 0.9rem;
  }

  .authors {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .content-column {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .header-box h3 {
    margin: 0;
    font-size: 1.25rem;
  }

  .header-box a {
    color: inherit;
    text-decoration: none;
  }

  .header-box a:hover {
    text-decoration: underline;
  }

  .description {
    color: var(--text-color, #666);
  }

  .line-clamp {
    display: -webkit-box;
    -webkit-line-clamp: 8;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .category {
    font-weight: 500;
    color: var(--category-color, #0066cc);
  }

  /* Responsive layout */
  @media (max-width: 768px) {
    .article-preview-row {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .metadata-column {
      flex-direction: row;
      flex-wrap: wrap;
      align-items: center;
    }

    .authors {
      flex-direction: row;
      flex-wrap: wrap;
    }

    .author:not(:last-child)::after {
      content: ",";
      margin-right: 0.25rem;
    }
  }
</style>

<script>
/* script ===========================================================================
// JavaScript for Component
//
// Type: Utility Functions
// Includes:
//   - Format dates
//   - Handle line clamping with "show more" functionality if needed
//   - Responsive layout adjustments
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ --> */

// Add click handler for expanding description if needed
document.addEventListener('DOMContentLoaded', () => {
  const descriptions = document.querySelectorAll('.line-clamp');
  descriptions.forEach(desc => {
    if (desc.scrollHeight > desc.clientHeight) {
      const container = desc.parentElement;
      if (container) {
        const expandBtn = document.createElement('button');
        expandBtn.textContent = 'Show more';
        expandBtn.className = 'expand-btn';
        expandBtn.onclick = () => {
          desc.style.webkitLineClamp = desc.style.webkitLineClamp ? '' : '8';
          expandBtn.textContent = desc.style.webkitLineClamp ? 'Show more' : 'Show less';
        };
        container.appendChild(expandBtn);
      }
    }
  });
});
</script>